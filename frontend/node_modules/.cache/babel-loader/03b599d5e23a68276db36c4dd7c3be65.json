{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\MERN\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\Replies.js\";\nimport React, { useEffect, useState } from 'react';\nimport Comment from './Comment';\n\nfunction Replies(props) {\n  const [repliesNum, setRepliesNum] = useState(0);\n  const [open, setOpen] = useState(false);\n  useEffect(() => {\n    let RepliesNum = 0;\n    props.replies.map(reply => {\n      if (reply.commentId === props.commentId) {\n        RepliesNum++;\n      }\n\n      setRepliesNum(RepliesNum);\n    });\n  }, [props.replies, props.commentId]);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replies\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, repliesNum > 0 && /*#__PURE__*/React.createElement(\"h5\", {\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, \"View \", repliesNum, \" more Replies\"), props.replies.map((reply, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, reply.commentId === props.commentId && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"replies__comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  }, open && /*#__PURE__*/React.createElement(Comment, {\n    key: index,\n    comment: reply,\n    postId: props.postId,\n    refreshFunction: props.refreshFunction,\n    responseTo: reply.responseTo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 33\n    }\n  })))));\n}\n\nexport default Replies;","map":{"version":3,"sources":["D:/Web Development/MERN/Screams-/frontend/src/components/Post/Replies.js"],"names":["React","useEffect","useState","Comment","Replies","props","repliesNum","setRepliesNum","open","setOpen","RepliesNum","replies","map","reply","commentId","handleOpen","index","postId","refreshFunction","responseTo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAEpB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,KAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIS,UAAU,GAAG,CAAjB;AAEAL,IAAAA,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAmBC,KAAD,IAAW;AACzB,UAAIA,KAAK,CAACC,SAAN,KAAoBT,KAAK,CAACS,SAA9B,EAAyC;AACrCJ,QAAAA,UAAU;AACb;;AACDH,MAAAA,aAAa,CAACG,UAAD,CAAb;AACH,KALD;AAMH,GATQ,EASN,CAACL,KAAK,CAACM,OAAP,EAAgBN,KAAK,CAACS,SAAtB,CATM,CAAT;;AAWA,QAAMC,UAAU,GAAG,MAAM;AACrBN,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,UAAU,GAAG,CAAb,iBACG;AAAI,IAAA,OAAO,EAAES,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA+BT,UAA/B,kBAFR,EAKKD,KAAK,CAACM,OAAN,CAAcC,GAAd,CAAkB,CAACC,KAAD,EAAQG,KAAR,kBACf,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACC,SAAN,KAAoBT,KAAK,CAACS,SAA1B,iBACG;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKN,IAAI,iBACD,oBAAC,OAAD;AAAS,IAAA,GAAG,EAAEQ,KAAd;AAAqB,IAAA,OAAO,EAAEH,KAA9B;AAAqC,IAAA,MAAM,EAAER,KAAK,CAACY,MAAnD;AAA2D,IAAA,eAAe,EAAEZ,KAAK,CAACa,eAAlF;AAAmG,IAAA,UAAU,EAAEL,KAAK,CAACM,UAArH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFR,CAFR,CADH,CALL,CADJ;AAoBH;;AAED,eAAef,OAAf","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport Comment from './Comment'\r\n\r\nfunction Replies(props) {\r\n\r\n    const [repliesNum, setRepliesNum] = useState(0);\r\n    const [open, setOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let RepliesNum = 0;\r\n\r\n        props.replies.map((reply) => {\r\n            if (reply.commentId === props.commentId) {\r\n                RepliesNum++;\r\n            }\r\n            setRepliesNum(RepliesNum);\r\n        })\r\n    }, [props.replies, props.commentId])\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    return (\r\n        <div className='replies'>\r\n            {repliesNum > 0 &&\r\n                <h5 onClick={handleOpen}>View {repliesNum} more Replies</h5>\r\n            }\r\n\r\n            {props.replies.map((reply, index) => (\r\n                <React.Fragment key={index}>\r\n                    {reply.commentId === props.commentId &&\r\n                        <div className='replies__comment'>\r\n                            {open &&\r\n                                <Comment key={index} comment={reply} postId={props.postId} refreshFunction={props.refreshFunction} responseTo={reply.responseTo} />\r\n                            }\r\n                        </div>\r\n                    }\r\n                </React.Fragment>\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Replies\r\n"]},"metadata":{},"sourceType":"module"}