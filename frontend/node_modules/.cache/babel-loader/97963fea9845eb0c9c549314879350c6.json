{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\Comment.js\";\nimport { Avatar, IconButton, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useSelector } from 'react-redux';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport './Post.css';\nimport Like from './Like';\n\nfunction Comment(props) {\n  const user = useSelector(state => state.user);\n  const [reply, setReply] = useState('');\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const variable = {\n      writer: user.userData._id,\n      postId: props.postId,\n      comment: reply,\n      reply: reply,\n      commentId: props.comment._id,\n      postWriter: props.postWriter\n    };\n    axios.post('/api/comment/postComment', variable).then(response => {\n      if (response.data.success) {\n        setReply('');\n        setOpen(false);\n        props.refreshFunction(response.data.doc);\n      } else {\n        alert('Comment cannot be posted right now!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"comments__avatar\",\n    src: props.comment.writer.image,\n    alt: props.comment.writer.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, props.comment.writer.username), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, props.comment.comment)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comment__actions\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Like, {\n    commentId: props.comment._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }), props.commentId && /*#__PURE__*/React.createElement(\"span\", {\n    onClick: handleOpen,\n    className: \"comment__actionBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 21\n    }\n  }, \"Reply\")), open && /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"comment__replyField\",\n    variant: \"standard\",\n    color: \"primary\",\n    type: \"text\",\n    label: \"Add a reply\",\n    value: reply,\n    onChange: e => setReply(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default Comment;","map":{"version":3,"sources":["D:/Development/Screams-/frontend/src/components/Post/Comment.js"],"names":["Avatar","IconButton","TextField","React","useState","axios","useSelector","FavoriteBorderRoundedIcon","Like","Comment","props","user","state","reply","setReply","open","setOpen","handleOpen","handleSubmit","e","preventDefault","variable","writer","userData","_id","postId","comment","commentId","postWriter","post","then","response","data","success","refreshFunction","doc","alert","image","username","target","value"],"mappings":"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","sourcesContent":["import { Avatar, IconButton, TextField } from '@material-ui/core';\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useSelector } from 'react-redux';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport './Post.css';\r\nimport Like from './Like';\r\n\r\nfunction Comment(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [reply, setReply] = useState('');\r\n    const [open, setOpen] = useState(false);\r\n\r\n    const handleOpen = () => {\r\n        setOpen(!open);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            comment: reply,\r\n            reply: reply,\r\n            commentId: props.comment._id,\r\n            postWriter: props.postWriter,\r\n        }\r\n\r\n        axios.post('/api/comment/postComment', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setReply('');\r\n                    setOpen(false);\r\n                    props.refreshFunction(response.data.doc);\r\n                } else {\r\n                    alert('Comment cannot be posted right now!');\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='comment'>\r\n            <div className='comment__info'>\r\n                <Avatar className='comments__avatar' src={props.comment.writer.image} alt={props.comment.writer.username} />\r\n                <h4>{props.comment.writer.username}</h4>\r\n                <p>{props.comment.comment}</p>\r\n            </div>\r\n            <div className='comment__actions'>\r\n                <Like commentId={props.comment._id} />\r\n                {props.commentId &&\r\n                    <span onClick={handleOpen} className='comment__actionBtn'>Reply</span>\r\n                }\r\n            </div>\r\n            {open &&\r\n                <form onSubmit={handleSubmit}>\r\n                    <TextField className='comment__replyField' variant='standard' color='primary' type='text' label='Add a reply'\r\n                        value={reply} onChange={(e) => setReply(e.target.value)}\r\n                    />\r\n                </form>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n"]},"metadata":{},"sourceType":"module"}