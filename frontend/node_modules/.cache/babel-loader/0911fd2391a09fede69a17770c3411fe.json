{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\Like.js\";\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { IconButton } from '@material-ui/core';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\n\nfunction Like(props) {\n  const user = useSelector(state => state.user);\n  const [likes, setLikes] = useState('');\n  const [liked, setLiked] = useState(null);\n  let variable = {};\n\n  if (props.post) {\n    variable = {\n      writer: user.userData._id,\n      postId: props.postId,\n      postWriter: props.postWriter\n    };\n  } else {\n    variable = {\n      writer: user.userData._id,\n      commentId: props.commentId,\n      postWriter: props.postWriter\n    };\n  }\n\n  useEffect(() => {\n    let writer = user.userData && user.userData._id;\n    axios.post('/api/like/getLikes', variable).then(response => {\n      if (response.data.success) {\n        setLikes(response.data.likes.length);\n        response.data.likes.map(like => {\n          if (like.writer === writer) {\n            setLiked('liked');\n          }\n        });\n      } else {\n        alert('Unable to get likes');\n      }\n    });\n  }, []);\n\n  const handleLike = () => {\n    if (liked === null) {\n      axios.post('/api/like/postLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(likes + 1);\n          setLiked('liked');\n        } else {\n          alert('Unable to like this post!!');\n        }\n      });\n    } else {\n      axios.post('/api/like/deleteLike', variable).then(response => {\n        if (response.data.success) {\n          setLikes(likes - 1);\n          setLiked(null);\n        } else {\n          alert('Cannot Unlike the post');\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, liked !== 'liked' ? /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderRoundedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 21\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: handleLike,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  })));\n}\n\nexport default Like;","map":{"version":3,"sources":["D:/Web Development/Screams-/frontend/src/components/Post/Like.js"],"names":["React","useEffect","useState","useSelector","axios","IconButton","FavoriteBorderRoundedIcon","FavoriteIcon","Like","props","user","state","likes","setLikes","liked","setLiked","variable","post","writer","userData","_id","postId","postWriter","commentId","then","response","data","success","length","map","like","alert","handleLike"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { IconButton } from '@material-ui/core';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\nfunction Like(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [likes, setLikes] = useState('');\r\n    const [liked, setLiked] = useState(null);\r\n\r\n    let variable = {}\r\n\r\n    if (props.post) {\r\n        variable = {\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n            postWriter: props.postWriter,\r\n        }\r\n    } else {\r\n        variable = {\r\n            writer: user.userData._id,\r\n            commentId: props.commentId,\r\n            postWriter: props.postWriter,\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        let writer = user.userData && user.userData._id;\r\n\r\n        axios.post('/api/like/getLikes', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setLikes(response.data.likes.length);\r\n                    response.data.likes.map(like => {\r\n                        if (like.writer === writer) {\r\n                            setLiked('liked');\r\n                        }\r\n                    })\r\n                } else {\r\n                    alert('Unable to get likes');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const handleLike = () => {\r\n        if (liked === null) {\r\n            axios.post('/api/like/postLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(likes + 1);\r\n                        setLiked('liked');\r\n                    } else {\r\n                        alert('Unable to like this post!!');\r\n                    }\r\n                })\r\n        } else {\r\n            axios.post('/api/like/deleteLike', variable)\r\n                .then(response => {\r\n                    if (response.data.success) {\r\n                        setLikes(likes - 1);\r\n                        setLiked(null);\r\n                    } else {\r\n                        alert('Cannot Unlike the post');\r\n                    }\r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {liked !== 'liked' ? (\r\n                <IconButton className='post__reactionBtn' onClick={handleLike} >\r\n                    <FavoriteBorderRoundedIcon fontSize='small' />\r\n                </IconButton>\r\n            ) : (\r\n                    <IconButton className='post__reactionBtn' onClick={handleLike} >\r\n                        <FavoriteIcon fontSize='small' />\r\n                    </IconButton>\r\n                )\r\n            }\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Like\r\n"]},"metadata":{},"sourceType":"module"}