{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\CommentsModal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { Avatar, Button, TextField } from '@material-ui/core';\nimport Comment from './Comment';\nimport './Post.css';\nimport Replies from './Replies';\n\nfunction CommentsModal(props) {\n  const user = useSelector(state => state.user);\n  const [comment, setComment] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const variable = {\n      comment: comment,\n      writer: user.userData._id,\n      postId: props.postId\n    };\n    axios.post('/api/comment/postComment', variable).then(response => {\n      if (response.data.success) {\n        setComment('');\n        props.refreshFunction(response.data.doc);\n      } else {\n        alert('Comment cannot be posted right now!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"comments__modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"comments__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Comments\"), props.comments && props.comments.map((comment, index) => !comment.commentId && /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Comment, {\n    comment: comment,\n    postId: props.postId,\n    commentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Replies, {\n    replies: props.comments,\n    postId: props.postId,\n    commentId: comment._id,\n    refreshFunction: props.refreshFunction,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"comments__container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"comments__avatar\",\n    src: user.userData && user.userData.image,\n    alt: user.userData && user.userData.email,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    className: \"comments__input\",\n    variant: \"standard\",\n    color: \"primary\",\n    type: \"text\",\n    label: \"Add a public comment\",\n    value: comment,\n    onChange: e => setComment(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    className: \"comments__logBtn\",\n    type: \"submit\",\n    variant: \"outlined\",\n    disabled: !comment,\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Post\")));\n}\n\nexport default CommentsModal;","map":{"version":3,"sources":["D:/Development/Screams-/frontend/src/components/Post/CommentsModal.js"],"names":["React","useState","useEffect","useSelector","axios","Avatar","Button","TextField","Comment","Replies","CommentsModal","props","user","state","comment","setComment","handleSubmit","e","preventDefault","variable","writer","userData","_id","postId","post","then","response","data","success","refreshFunction","doc","alert","comments","map","index","commentId","image","email","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { Avatar, Button, TextField } from '@material-ui/core';\r\nimport Comment from './Comment';\r\nimport './Post.css'\r\nimport Replies from './Replies';\r\n\r\nfunction CommentsModal(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [comment, setComment] = useState('');\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            comment: comment,\r\n            writer: user.userData._id,\r\n            postId: props.postId,\r\n        }\r\n\r\n        axios.post('/api/comment/postComment', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComment('');\r\n                    props.refreshFunction(response.data.doc);\r\n                } else {\r\n                    alert('Comment cannot be posted right now!');\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='comments__modal'>\r\n            <h3 className='comments__header'>Comments</h3>\r\n            {props.comments && props.comments.map((comment, index) => (\r\n                (!comment.commentId &&\r\n                    <React.Fragment key={index}>\r\n                        <Comment comment={comment} postId={props.postId} commentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                        <Replies replies={props.comments} postId={props.postId} commentId={comment._id} refreshFunction={props.refreshFunction} />\r\n                    </React.Fragment>\r\n                )\r\n            ))}\r\n            <form onSubmit={handleSubmit} className='comments__container'>\r\n                <Avatar className='comments__avatar' src={user.userData && user.userData.image} alt={user.userData && user.userData.email} />\r\n                <TextField className='comments__input' variant='standard' color='primary' type='text' label='Add a public comment'\r\n                    value={comment} onChange={(e) => setComment(e.target.value)}\r\n                />\r\n                <Button className='comments__logBtn' type='submit' variant='outlined' disabled={!comment} onClick={handleSubmit}>Post</Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentsModal\r\n"]},"metadata":{},"sourceType":"module"}