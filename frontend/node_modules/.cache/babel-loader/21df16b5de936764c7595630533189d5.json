{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Login.js\";\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { loginUser } from '../_actions/user_action';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Register from './Register';\nimport { TextField, Checkbox, Button, Modal, makeStyles } from '@material-ui/core';\nimport screamLogo64x from '../images/screamLogo64x.png';\nimport './Register.css';\nimport { withRouter } from 'react-router-dom';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: 500,\n    objectFit: 'contain',\n    width: '90%',\n    backgroundColor: '#f9c5d1',\n    backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\n    border: '4px solid rgb(176, 134, 200)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction Login(props) {\n  const dispatch = useDispatch();\n  const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n  const [error, setError] = useState('');\n  const [rememberMe, setRememberMe] = useState(rememberMeChecked);\n\n  const handleRememberMe = () => {\n    setRememberMe(!rememberMe);\n  };\n\n  const initialEmail = localStorage.getItem('rememberMe') ? localStorage.getItem('rememberMe') : '';\n  return /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      email: initialEmail,\n      password: ''\n    },\n    validationSchema: yup.object().shape({\n      email: yup.string().email('Email is invalid!').required('Email is required'),\n      password: yup.string().required('Password is required')\n    }),\n    onSubmit: (values, {\n      setSubmitting\n    }) => {\n      setTimeout(() => {\n        let submit = {\n          email: values.email,\n          password: values.password\n        };\n        dispatch(loginUser(submit)).then(response => {\n          if (response.payload.loginSuccess) {\n            window.localStorage.setItem('userId', response.payload.userId);\n\n            if (rememberMe === true) {\n              window.localStorage.setItem('rememberMe', values.id);\n            } else {\n              localStorage.removeItem('rememberMe');\n            }\n\n            props.history.push('/home');\n          } else {\n            setError('Invalid Username or Password');\n          }\n        }).catch(err => {\n          setError('Invalid Username or Password again');\n          setTimeout(() => {\n            setError('');\n          }, 3000);\n        });\n        setSubmitting(false);\n      }, 500);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, props => {\n    const {\n      values,\n      touched,\n      errors,\n      dirty,\n      isSubmitting,\n      handleChange,\n      handleBlur,\n      handleSubmit,\n      handleReset\n    } = props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__hero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: screamLogo64x,\n      alt: \"screams\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, \"Screams'\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 33\n      }\n    }, \"Let Your Thoughts Be Loud Enough\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 33\n      }\n    }, \"Make Your Mind Scream!\"), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"Follow Your Interest\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__register\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"home__loginField\",\n      name: \"email\",\n      variant: \"outlined\",\n      label: \"Email\",\n      type: \"email\",\n      value: values.email,\n      onChange: handleChange,\n      required: true,\n      className: errors.email && touched.email ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 37\n      }\n    }), errors.email && touched.email && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 41\n      }\n    }, errors.email), /*#__PURE__*/React.createElement(TextField, {\n      id: \"home__loginField\",\n      name: \"password\",\n      variant: \"outlined\",\n      label: \"Password\",\n      type: \"password\",\n      value: values.password,\n      onChange: handleChange,\n      required: true,\n      className: errors.password && touched.password ? 'text-input error' : 'text-input',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 37\n      }\n    }), errors.password && touched.password && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-feedback\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 41\n      }\n    }, errors.password), error && /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: \"login__error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 48\n      }\n    }, error)), /*#__PURE__*/React.createElement(FormControlLabel, {\n      control: /*#__PURE__*/React.createElement(Checkbox, {\n        checked: rememberMe,\n        onChange: handleRememberMe,\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 45\n        }\n      }),\n      label: \"Remember Me\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      className: \"home__logBtn\",\n      variant: \"contained\",\n      type: \"submit\",\n      disabled: isSubmitting,\n      onClick: handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 37\n      }\n    }, \"Log in\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__signUp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 33\n      }\n    }, \"Let's Screams' Today!\"), /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Register, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(Button, {\n      className: \"home__logBtn home__signUpBtn\",\n      color: \"primary\",\n      variant: \"outlined\",\n      type: \"submit\",\n      onClick: () => setOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 33\n      }\n    }, \"SignUp\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"home__footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 33\n      }\n    }, \"\\xA9 2020 Screams', Inc.\"))));\n  });\n}\n\nexport default withRouter(Login);","map":{"version":3,"sources":["D:/Development/Screams-/frontend/src/components/Login.js"],"names":["React","useState","useDispatch","Formik","yup","loginUser","FormControlLabel","Register","TextField","Checkbox","Button","Modal","makeStyles","screamLogo64x","withRouter","getModalStyle","top","left","transform","useStyles","theme","paper","position","maxWidth","objectFit","width","backgroundColor","backgroundImage","border","boxShadow","shadows","padding","spacing","Login","props","dispatch","rememberMeChecked","localStorage","getItem","open","setOpen","modalStyle","classes","error","setError","rememberMe","setRememberMe","handleRememberMe","initialEmail","email","password","object","shape","string","required","values","setSubmitting","setTimeout","submit","then","response","payload","loginSuccess","window","setItem","userId","id","removeItem","history","push","catch","err","touched","errors","dirty","isSubmitting","handleChange","handleBlur","handleSubmit","handleReset"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch } from 'react-redux';\r\nimport { Formik } from 'formik';\r\nimport * as yup from 'yup';\r\nimport { loginUser } from '../_actions/user_action';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Register from './Register';\r\nimport { TextField, Checkbox, Button, Modal, makeStyles } from '@material-ui/core';\r\nimport screamLogo64x from '../images/screamLogo64x.png';\r\nimport './Register.css';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 500,\r\n        objectFit: 'contain',\r\n        width: '90%',\r\n        backgroundColor: '#f9c5d1',\r\n        backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\r\n        border: '4px solid rgb(176, 134, 200)',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\nfunction Login(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const rememberMeChecked = localStorage.getItem('rememberMe') ? true : false;\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [modalStyle] = useState(getModalStyle)\r\n    const classes = useStyles();\r\n    const [error, setError] = useState('');\r\n    const [rememberMe, setRememberMe] = useState(rememberMeChecked);\r\n\r\n    const handleRememberMe = () => {\r\n        setRememberMe(!rememberMe);\r\n    }\r\n\r\n    const initialEmail = localStorage.getItem('rememberMe') ? localStorage.getItem('rememberMe') : '';\r\n\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                email: initialEmail,\r\n                password: '',\r\n            }}\r\n            validationSchema={yup.object().shape({\r\n                email: yup.string()\r\n                    .email('Email is invalid!')\r\n                    .required('Email is required'),\r\n                password: yup.string()\r\n                    .required('Password is required'),\r\n            })}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n                setTimeout(() => {\r\n                    let submit = {\r\n                        email: values.email,\r\n                        password: values.password,\r\n                    }\r\n                    dispatch(loginUser(submit))\r\n                        .then(response => {\r\n                            if (response.payload.loginSuccess) {\r\n                                window.localStorage.setItem('userId', response.payload.userId);\r\n                                if (rememberMe === true) {\r\n                                    window.localStorage.setItem('rememberMe', values.id);\r\n                                } else {\r\n                                    localStorage.removeItem('rememberMe');\r\n                                }\r\n                                props.history.push('/home');\r\n                            } else {\r\n                                setError('Invalid Username or Password');\r\n                            }\r\n                        })\r\n                        .catch(err => {\r\n                            setError('Invalid Username or Password again');\r\n                            setTimeout(() => {\r\n                                setError('');\r\n                            }, 3000)\r\n                        })\r\n                    setSubmitting(false);\r\n                }, 500)\r\n            }}\r\n        >\r\n            {props => {\r\n                const {\r\n                    values,\r\n                    touched,\r\n                    errors,\r\n                    dirty,\r\n                    isSubmitting,\r\n                    handleChange,\r\n                    handleBlur,\r\n                    handleSubmit,\r\n                    handleReset,\r\n                } = props;\r\n\r\n                return (\r\n                    <div className='home'>\r\n                        <div className='home__hero'>\r\n                            <div className='home__header'>\r\n                                <img src={screamLogo64x} alt='screams' />\r\n                                <h2>Screams'</h2>\r\n                            </div>\r\n\r\n\r\n                            <div className='home__container'>\r\n                                <h1>Let Your Thoughts Be Loud Enough</h1>\r\n                                <h1>Make Your Mind Scream!</h1>\r\n                                <h1>Follow Your Interest</h1>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className='home__register'>\r\n                            <form onSubmit={handleSubmit}>\r\n                                <div className='home__login'>\r\n                                    <TextField id='home__loginField'\r\n                                        name='email'\r\n                                        variant='outlined'\r\n                                        label='Email'\r\n                                        type='email'\r\n                                        value={values.email}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        className={\r\n                                            errors.email && touched.email ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.email && touched.email && (\r\n                                        <div className='input-feedback'>{errors.email}</div>\r\n                                    )}\r\n\r\n                                    <TextField id='home__loginField'\r\n                                        name='password'\r\n                                        variant='outlined'\r\n                                        label='Password'\r\n                                        type='password'\r\n                                        value={values.password}\r\n                                        onChange={handleChange}\r\n                                        required\r\n                                        className={\r\n                                            errors.password && touched.password ? 'text-input error' : 'text-input'\r\n                                        }\r\n                                    />\r\n                                    {errors.password && touched.password && (\r\n                                        <div className='input-feedback'>{errors.password}</div>\r\n                                    )}\r\n\r\n                                    {error && (\r\n                                        <label><p className='login__error'>{error}</p></label>\r\n                                    )}\r\n\r\n                                    <FormControlLabel\r\n                                        control={\r\n                                            <Checkbox\r\n                                                checked={rememberMe}\r\n                                                onChange={handleRememberMe}\r\n                                                color=\"primary\"\r\n                                            />\r\n                                        }\r\n                                        label=\"Remember Me\"\r\n                                    />\r\n\r\n                                    <Button className='home__logBtn'\r\n                                        variant='contained'\r\n                                        type='submit'\r\n                                        disabled={isSubmitting}\r\n                                        onClick={handleSubmit}>Log in</Button>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <div className='home__signUp'>\r\n                                <h3>Let's Screams' Today!</h3>\r\n                                <Modal open={open} onClose={() => setOpen(false)}>\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n                                        <Register />\r\n                                    </div>\r\n                                </Modal>\r\n                                <Button className='home__logBtn home__signUpBtn' color='primary' variant='outlined' type='submit' onClick={() => setOpen(true)}>SignUp</Button>\r\n                            </div>\r\n\r\n                            <div className='home__footer'>\r\n                                <span>© 2020 Screams', Inc.</span>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                )\r\n            }}\r\n        </Formik>\r\n    )\r\n}\r\n\r\nexport default withRouter(Login);\r\n"]},"metadata":{},"sourceType":"module"}