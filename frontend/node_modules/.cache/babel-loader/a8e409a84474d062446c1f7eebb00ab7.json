{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Messaging\\\\Inbox.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Avatar, Divider, IconButton, TextField } from '@material-ui/core';\nimport Header from '../Header/Header';\nimport Sidebar from '../Sidebar/Sidebar';\nimport { Link } from 'react-router-dom';\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\nimport CallIcon from '@material-ui/icons/Call';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport SendIcon from '@material-ui/icons/Send';\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\nimport './Messaging.css';\n\nfunction Inbox(props) {\n  const [sender, setSender] = useState('');\n  const [message, setMessage] = useState('');\n  const [userMessages, setUserMessages] = useState([]);\n  const [contactMessages, setContactMessages] = useState([]);\n  const [messages, setMessages] = useState([]);\n  const contactId = props.match.params.userId;\n  localStorage.setItem('postId', contactId);\n  useEffect(() => {\n    let senderVariable = {\n      writer: contactId\n    };\n    axios.post('/api/user/getUser', senderVariable).then(response => {\n      if (response.data.success) {\n        setSender(response.data.userDetails);\n      } else {\n        alert('Cannot Get The User Deatils');\n      }\n    });\n  }, []);\n\n  const handleBack = () => {\n    props.history.goBack();\n  };\n\n  const variable = {\n    writer: localStorage.getItem('userId'),\n    message: message,\n    contactId: contactId\n  };\n  const allMessages = userMessages.concat(contactMessages);\n  useEffect(() => {\n    axios.post('/api/message/getUserMessages', variable).then(response => {\n      if (response.data.success) {\n        setUserMessages([...allMessages, ...response.data.messages]);\n      } else {\n        alert('Cannot get messages');\n      }\n    });\n    axios.post('/api/message/getContactMessages', variable).then(response => {\n      if (response.data.success) {\n        setContactMessages([...allMessages, ...response.data.messages]);\n      } else {\n        alert('Cannot get messages');\n      }\n    });\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    axios.post('/api/message/postMessage', variable).then(response => {\n      if (response.data.success) {\n        setMessage('');\n        setUserMessages([...allMessages, response.data.doc]);\n      } else {\n        alert('Cannot Send Message!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Sidebar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inbox__box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inbox__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleBack,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(ArrowBackIosIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Avatar, {\n    src: sender.image,\n    alt: \"user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, sender.firstName + ' ' + sender.lastName), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"inbox__headerBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(CallIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${localStorage.getItem('postId')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(InfoOutlinedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inbox__messages\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, allMessages.map((msg, index) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: msg.writer._id === localStorage.getItem('userId') ? 'inbox__message right' : 'inbox__message',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 29\n    }\n  }, msg.writer._id !== localStorage.getItem('userId') && /*#__PURE__*/React.createElement(Avatar, {\n    className: \"inbox__avatar\",\n    src: msg.writer.image,\n    alt: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"inbox__msg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 33\n    }\n  }, msg.message))))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"inbox__field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(PhotoCameraIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TextField, {\n    className: \"inbox__textField\",\n    type: \"text\",\n    variant: \"outlined\",\n    placeholder: \"Message....\",\n    value: message,\n    onChange: e => setMessage(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    fontSize: \"small\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 25\n    }\n  })))));\n}\n\nexport default Inbox;","map":{"version":3,"sources":["D:/Web Development/Screams-/frontend/src/components/Messaging/Inbox.js"],"names":["React","useEffect","useState","axios","Avatar","Divider","IconButton","TextField","Header","Sidebar","Link","ArrowBackIosIcon","CallIcon","InfoOutlinedIcon","SendIcon","PhotoCameraIcon","Inbox","props","sender","setSender","message","setMessage","userMessages","setUserMessages","contactMessages","setContactMessages","messages","setMessages","contactId","match","params","userId","localStorage","setItem","senderVariable","writer","post","then","response","data","success","userDetails","alert","handleBack","history","goBack","variable","getItem","allMessages","concat","handleSubmit","e","preventDefault","doc","image","firstName","lastName","map","msg","index","_id","target","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Avatar, Divider, IconButton, TextField } from '@material-ui/core';\r\nimport Header from '../Header/Header';\r\nimport Sidebar from '../Sidebar/Sidebar';\r\nimport { Link } from 'react-router-dom';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport CallIcon from '@material-ui/icons/Call';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport PhotoCameraIcon from '@material-ui/icons/PhotoCamera';\r\nimport './Messaging.css';\r\n\r\nfunction Inbox(props) {\r\n\r\n    const [sender, setSender] = useState('');\r\n    const [message, setMessage] = useState('');\r\n    const [userMessages, setUserMessages] = useState([]);\r\n    const [contactMessages, setContactMessages] = useState([]);\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const contactId = props.match.params.userId;\r\n    localStorage.setItem('postId', contactId);\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        let senderVariable = {\r\n            writer: contactId,\r\n        }\r\n\r\n        axios.post('/api/user/getUser', senderVariable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setSender(response.data.userDetails);\r\n                } else {\r\n                    alert('Cannot Get The User Deatils');\r\n                }\r\n            })\r\n\r\n    }, [])\r\n\r\n    const handleBack = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const variable = {\r\n        writer: localStorage.getItem('userId'),\r\n        message: message,\r\n        contactId: contactId\r\n    }\r\n\r\n    const allMessages = userMessages.concat(contactMessages);\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/message/getUserMessages', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setUserMessages([...allMessages, ...response.data.messages]);\r\n                } else {\r\n                    alert('Cannot get messages');\r\n                }\r\n            })\r\n        axios.post('/api/message/getContactMessages', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setContactMessages([...allMessages, ...response.data.messages]);\r\n                } else {\r\n                    alert('Cannot get messages');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        axios.post('/api/message/postMessage', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setMessage('');\r\n                    setUserMessages([...allMessages, response.data.doc]);\r\n                } else {\r\n                    alert('Cannot Send Message!');\r\n                }\r\n            })\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <Header />\r\n            <Sidebar />\r\n\r\n            <div className='inbox__box'>\r\n                <div className='inbox__header'>\r\n                    <IconButton onClick={handleBack}>\r\n                        <ArrowBackIosIcon fontSize='small' />\r\n                    </IconButton>\r\n                    <Avatar src={sender.image} alt='user' />\r\n                    <p>{sender.firstName + ' ' + sender.lastName}</p>\r\n                    <IconButton className='inbox__headerBtn'>\r\n                        <CallIcon fontSize='small' />\r\n                    </IconButton>\r\n                    <Link to={`/profile/${localStorage.getItem('postId')}`}>\r\n                        <IconButton>\r\n                            <InfoOutlinedIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className='inbox__messages'>\r\n                    {allMessages.map((msg, index) => (\r\n                        <React.Fragment key={index}>\r\n                            <div\r\n                                className={msg.writer._id === localStorage.getItem('userId') ? 'inbox__message right' : 'inbox__message'}\r\n                            >\r\n                                {msg.writer._id !== localStorage.getItem('userId') && \r\n                                    <Avatar className='inbox__avatar' src={msg.writer.image} alt='name' />\r\n                                }\r\n                                <p className='inbox__msg'>{msg.message}</p>\r\n                            </div>\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>\r\n\r\n                <form onSubmit={handleSubmit} className='inbox__field'>\r\n                    <IconButton>\r\n                        <PhotoCameraIcon fontSize='small' />\r\n                    </IconButton>\r\n                    <TextField className='inbox__textField' type='text' variant='outlined' placeholder='Message....' value={message} onChange={(e) => setMessage(e.target.value)} />\r\n                    <IconButton>\r\n                        <SendIcon fontSize='small' onClick={handleSubmit} />\r\n                    </IconButton>\r\n                </form>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Inbox\r\n"]},"metadata":{},"sourceType":"module"}