{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\MERN\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\PostDetails.js\";\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport CancelIcon from '@material-ui/icons/Cancel';\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport AddCommentIcon from '@material-ui/icons/AddComment';\nimport PollIcon from '@material-ui/icons/Poll';\nimport SendIcon from '@material-ui/icons/Send';\nimport screamLogo64x from '../../images/screamLogo64x.png';\nimport { Avatar, Button, Divider, IconButton, makeStyles, Modal } from '@material-ui/core';\nimport Carousel from 'react-material-ui-carousel';\nimport Comments from './Comments';\nimport './Post.css';\nimport CommentsModal from './CommentsModal';\nimport Post from './Post';\nimport Like from './Like';\nimport Follow from './Follow';\nimport { Link } from 'react-router-dom';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: 500,\n    objectFit: 'contain',\n    width: '90%',\n    backgroundColor: '#f9c5d1',\n    backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\n    border: '4px solid rgb(176, 134, 200)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n}));\n\nfunction PostDetails(props) {\n  const postId = props.match.params.postId;\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = useState(getModalStyle);\n  const classes = useStyles();\n  const [post, setPost] = useState('');\n  const [comments, setComments] = useState([]);\n  const [commentNum, setCommentNum] = useState('');\n  const variable = {\n    postId: postId\n  };\n  useEffect(() => {\n    axios.post('/api/post/getPost', variable).then(response => {\n      if (response.data.success) {\n        setPost(response.data.post);\n      } else {\n        alert('Unable to fetch post!');\n      }\n    });\n    axios.post('/api/comment/getComment', variable).then(response => {\n      if (response.data.success) {\n        setComments(response.data.comments);\n      } else {\n        alert('Unable to fetch comments');\n      }\n    });\n  }, []);\n\n  const updateComments = comment => {\n    setComments(comments.concat(comment));\n  };\n\n  const handleClose = () => {\n    props.history.goBack();\n  };\n\n  const savePostId = () => {\n    window.localStorage.setItem('postId', post.writer._id);\n  };\n\n  if (post.writer) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__left\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(CancelIcon, {\n      className: \"postDetail__close\",\n      fontSize: \"large\",\n      onClick: handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"img\", {\n      src: screamLogo64x,\n      alt: \"screams\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(AspectRatioIcon, {\n      className: \"postDetail__max\",\n      fontSize: \"large\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__image\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 21\n      }\n    }, post.images[0] && /*#__PURE__*/React.createElement(Carousel, {\n      autoplay: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 29\n      }\n    }, post.images.map(image => /*#__PURE__*/React.createElement(\"img\", {\n      className: \"postDetail__img\",\n      src: `http://localhost:5000/${image}`,\n      alt: \"images\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }\n    }))), post.video && /*#__PURE__*/React.createElement(\"video\", {\n      className: \"postDetail__img\",\n      controls: true,\n      src: `http://localhost:5000/${post.video}`,\n      alt: \"videos\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__right\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__details\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      className: \"postDetail__user\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/profile/${localStorage.getItem('postId')}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: \"postDetail__userPic\",\n      src: post.writer.image,\n      alt: post.writer.username,\n      onClick: savePostId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"h4\", {\n      onClick: savePostId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, post.writer.firstName + ' ' + post.writer.lastName), /*#__PURE__*/React.createElement(Follow, {\n      following: post.writer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"section\", {\n      className: \"postDetail__userE\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      onClick: savePostId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 29\n      }\n    }, \"@\", post.writer.username), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 29\n      }\n    }, \" \\xB7 \", moment(post.createdAt).format('MMM Do YY'))), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"postDetail__userCaption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 25\n      }\n    }, post.caption), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__reaction\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post__reactionBtns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Like, {\n      post: post,\n      postId: post._id,\n      postWriter: post.writer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post__reactionBtns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      open: open,\n      onClose: () => setOpen(false),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: modalStyle,\n      className: classes.paper,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(CommentsModal, {\n      comments: comments,\n      commentNum: commentNum,\n      postId: postId,\n      refreshFunction: updateComments,\n      postWriter: post.writer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(IconButton, {\n      className: \"post__reactionBtn\",\n      onClick: () => setOpen(true),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(AddCommentIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post__reactionBtns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"post__reactionBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(PollIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post__reactionBtns\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: \"post__reactionBtn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(SendIcon, {\n      fontSize: \"small\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 37\n      }\n    })))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"post__reactionDetails\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 29\n      }\n    }, commentNum, \" Comments\")), /*#__PURE__*/React.createElement(Divider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"postDetail__comments\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Comments, {\n      comments: comments,\n      postId: postId,\n      refreshFunction: updateComments,\n      setCommentNum: setCommentNum,\n      postWriter: post.writer._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 29\n      }\n    })))));\n  } else {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 13\n      }\n    }, \"Loading....\");\n  }\n}\n\nexport default PostDetails;","map":{"version":3,"sources":["D:/Web Development/MERN/Screams-/frontend/src/components/Post/PostDetails.js"],"names":["React","useEffect","useState","moment","axios","CancelIcon","AspectRatioIcon","FavoriteBorderRoundedIcon","FavoriteIcon","AddCommentIcon","PollIcon","SendIcon","screamLogo64x","Avatar","Button","Divider","IconButton","makeStyles","Modal","Carousel","Comments","CommentsModal","Post","Like","Follow","Link","getModalStyle","top","left","transform","useStyles","theme","paper","position","maxWidth","objectFit","width","backgroundColor","backgroundImage","border","boxShadow","shadows","padding","spacing","PostDetails","props","postId","match","params","open","setOpen","modalStyle","classes","post","setPost","comments","setComments","commentNum","setCommentNum","variable","then","response","data","success","alert","updateComments","comment","concat","handleClose","history","goBack","savePostId","window","localStorage","setItem","writer","_id","images","map","image","video","getItem","username","firstName","lastName","createdAt","format","caption"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport CancelIcon from '@material-ui/icons/Cancel';\r\nimport AspectRatioIcon from '@material-ui/icons/AspectRatio';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport screamLogo64x from '../../images/screamLogo64x.png'\r\nimport { Avatar, Button, Divider, IconButton, makeStyles, Modal } from '@material-ui/core';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport Comments from './Comments';\r\nimport './Post.css';\r\nimport CommentsModal from './CommentsModal';\r\nimport Post from './Post';\r\nimport Like from './Like';\r\nimport Follow from './Follow';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 500,\r\n        objectFit: 'contain',\r\n        width: '90%',\r\n        backgroundColor: '#f9c5d1',\r\n        backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\r\n        border: '4px solid rgb(176, 134, 200)',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nfunction PostDetails(props) {\r\n\r\n    const postId = props.match.params.postId;\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [modalStyle] = useState(getModalStyle)\r\n    const classes = useStyles();\r\n\r\n    const [post, setPost] = useState('');\r\n    const [comments, setComments] = useState([]);\r\n    const [commentNum, setCommentNum] = useState('')\r\n\r\n    const variable = {\r\n        postId: postId,\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/post/getPost', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setPost(response.data.post);\r\n                } else {\r\n                    alert('Unable to fetch post!');\r\n                }\r\n            })\r\n\r\n        axios.post('/api/comment/getComment', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComments(response.data.comments);\r\n                } else {\r\n                    alert('Unable to fetch comments');\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    const updateComments = (comment) => {\r\n        setComments(comments.concat(comment));\r\n    }\r\n\r\n    const handleClose = () => {\r\n        props.history.goBack();\r\n    }\r\n\r\n    const savePostId = () => {\r\n        window.localStorage.setItem('postId', post.writer._id);\r\n    }\r\n\r\n\r\n    if (post.writer) {\r\n        return (\r\n            <div className='postDetail'>\r\n\r\n                <div className='postDetail__left'>\r\n                    <div className='postDetail__header'>\r\n                        <CancelIcon className='postDetail__close' fontSize='large' onClick={handleClose} />\r\n                        <img src={screamLogo64x} alt='screams' />\r\n                        <AspectRatioIcon className='postDetail__max' fontSize='large' />\r\n                    </div>\r\n                    <div className='postDetail__image'>\r\n                        {post.images[0] &&\r\n                            <Carousel autoplay={false}>\r\n                                {post.images.map(image => (\r\n                                    <img className='postDetail__img' src={`http://localhost:5000/${image}`} alt='images' />\r\n                                ))}\r\n                            </Carousel>\r\n                        }\r\n                        {post.video &&\r\n                            <video className='postDetail__img' controls src={`http://localhost:5000/${post.video}`} alt='videos' />\r\n                        }\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='postDetail__right'>\r\n                    <div className='postDetail__details'>\r\n                        <section className='postDetail__user'>\r\n                            <Link to={`/profile/${localStorage.getItem('postId')}`}>\r\n                                <Avatar className='postDetail__userPic' src={post.writer.image} alt={post.writer.username} onClick={savePostId} />\r\n                            </Link>\r\n                            <h4 onClick={savePostId}>{post.writer.firstName + ' ' + post.writer.lastName}</h4>\r\n                            <Follow following={post.writer._id} />\r\n                        </section>\r\n                        <section className='postDetail__userE'>\r\n                            <span onClick={savePostId}>@{post.writer.username}</span>\r\n                            <span> · {moment(post.createdAt).format('MMM Do YY')}</span>\r\n                        </section>\r\n                        <p className='postDetail__userCaption'>{post.caption}</p>\r\n                        <div className='postDetail__reaction'>\r\n                            <div className='post__reactionBtns'>\r\n                                <Like post={post} postId={post._id} postWriter={post.writer._id} />\r\n                            </div>\r\n                            <div className='post__reactionBtns'>\r\n                                <Modal open={open} onClose={() => setOpen(false)}>\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n                                        <CommentsModal\r\n                                            comments={comments}\r\n                                            commentNum={commentNum}\r\n                                            postId={postId}\r\n                                            refreshFunction={updateComments}\r\n                                            postWriter={post.writer._id}\r\n                                        />\r\n                                    </div>\r\n                                </Modal>\r\n                                <IconButton className='post__reactionBtn' onClick={() => setOpen(true)}>\r\n                                    <AddCommentIcon fontSize='small' />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className='post__reactionBtns'>\r\n                                <IconButton className='post__reactionBtn' >\r\n                                    <PollIcon fontSize='small' />\r\n                                </IconButton>\r\n                            </div>\r\n                            <div className='post__reactionBtns'>\r\n                                <IconButton className='post__reactionBtn' >\r\n                                    <SendIcon fontSize='small' />\r\n                                </IconButton>\r\n                            </div>\r\n                        </div>\r\n                        <div className='post__reactionDetails'>\r\n                            <span>{commentNum} Comments</span>\r\n                        </div>\r\n                        <Divider />\r\n                        <div className='postDetail__comments'>\r\n                            <Comments\r\n                                comments={comments}\r\n                                postId={postId}\r\n                                refreshFunction={updateComments}\r\n                                setCommentNum={setCommentNum}\r\n                                postWriter={post.writer._id}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                Loading....\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PostDetails\r\n"]},"metadata":{},"sourceType":"module"}