{"ast":null,"code":"var _jsxFileName = \"D:\\\\Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Upload\\\\VidDropZone.js\";\nimport React, { useState } from 'react';\nimport Dropzone from 'react-dropzone';\nimport axios from 'axios';\nimport MovieIcon from '@material-ui/icons/Movie';\nimport ImageIcon from '@material-ui/icons/Image';\nimport './Upload.css';\n\nfunction VidDropZone({\n  video,\n  setVideo,\n  thumbnail,\n  setThumbnail,\n  duration,\n  setDuration\n}) {\n  const handleDrop = files => {\n    let formData = new FormData();\n    const config = {\n      header: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    console.log(files);\n    formData.append('file', files[0]);\n    axios.post('/api/post/uploadVideo', formData, config).then(response => {\n      if (response.data.success) {\n        setVideo(response.data.videoFilePath);\n        let variable = {\n          filePath: response.data.videoFilePath\n        };\n        axios.post('/api/post/thumbnail', variable).then(response => {\n          if (response.data.success) {\n            setThumbnail(response.data.thumbsFilePath);\n            setDuration(response.data.thumbsFileDuration);\n          } else {\n            alert('Failed to upload video!');\n          }\n        });\n      } else {\n        alert('Failed to upload!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Dropzone, {\n    onDrop: handleDrop,\n    multiple: false,\n    maxSize: 80000000000,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, ({\n    getRootProps,\n    getInputProps\n  }) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, getRootProps({\n    className: 'dropzone',\n    onDrop: event => event.stopPropagation()\n  }), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    name: \"file\"\n  }, getInputProps(), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(MovieIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 29\n    }\n  })))));\n}\n\nexport default VidDropZone;","map":{"version":3,"sources":["D:/Development/Screams-/frontend/src/components/Upload/VidDropZone.js"],"names":["React","useState","Dropzone","axios","MovieIcon","ImageIcon","VidDropZone","video","setVideo","thumbnail","setThumbnail","duration","setDuration","handleDrop","files","formData","FormData","config","header","console","log","append","post","then","response","data","success","videoFilePath","variable","filePath","thumbsFilePath","thumbsFileDuration","alert","getRootProps","getInputProps","className","onDrop","event","stopPropagation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,cAAP;;AAEA,SAASC,WAAT,CAAqB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,QAAT;AAAmBC,EAAAA,SAAnB;AAA8BC,EAAAA,YAA9B;AAA4CC,EAAAA,QAA5C;AAAsDC,EAAAA;AAAtD,CAArB,EAA0F;AAEtF,QAAMC,UAAU,GAAIC,KAAD,IAAW;AAC1B,QAAIC,QAAQ,GAAG,IAAIC,QAAJ,EAAf;AAEA,UAAMC,MAAM,GAAG;AACXC,MAAAA,MAAM,EAAE;AAAE,wBAAgB;AAAlB;AADG,KAAf;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAZ;AACAC,IAAAA,QAAQ,CAACM,MAAT,CAAgB,MAAhB,EAAwBP,KAAK,CAAC,CAAD,CAA7B;AAEAX,IAAAA,KAAK,CAACmB,IAAN,CAAW,uBAAX,EAAoCP,QAApC,EAA8CE,MAA9C,EACKM,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBlB,QAAAA,QAAQ,CAACgB,QAAQ,CAACC,IAAT,CAAcE,aAAf,CAAR;AAEA,YAAIC,QAAQ,GAAG;AACXC,UAAAA,QAAQ,EAAEL,QAAQ,CAACC,IAAT,CAAcE;AADb,SAAf;AAGAxB,QAAAA,KAAK,CAACmB,IAAN,CAAW,qBAAX,EAAkCM,QAAlC,EACKL,IADL,CACUC,QAAQ,IAAI;AACd,cAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBhB,YAAAA,YAAY,CAACc,QAAQ,CAACC,IAAT,CAAcK,cAAf,CAAZ;AACAlB,YAAAA,WAAW,CAACY,QAAQ,CAACC,IAAT,CAAcM,kBAAf,CAAX;AACH,WAHD,MAGO;AACHC,YAAAA,KAAK,CAAC,yBAAD,CAAL;AACH;AACJ,SARL;AASH,OAfD,MAeO;AACHA,QAAAA,KAAK,CAAC,mBAAD,CAAL;AACH;AACJ,KApBL;AAqBH,GA9BD;;AAgCA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAEnB,UAAlB;AACI,IAAA,QAAQ,EAAE,KADd;AAEI,IAAA,OAAO,EAAE,WAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIK,CAAC;AAAEoB,IAAAA,YAAF;AAAgBC,IAAAA;AAAhB,GAAD,kBACG;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,6CACQD,YAAY,CAAC;AACbE,IAAAA,SAAS,EAAE,UADE;AAEbC,IAAAA,MAAM,EAAEC,KAAK,IAAIA,KAAK,CAACC,eAAN;AAFJ,GAAD,CADpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAMI;AAAO,IAAA,IAAI,EAAC;AAAZ,KAAuBJ,aAAa,EAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANJ,eAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPJ,CADJ,CALR,CADJ,CADJ;AAsBH;;AAED,eAAe5B,WAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport Dropzone from 'react-dropzone';\r\nimport axios from 'axios';\r\nimport MovieIcon from '@material-ui/icons/Movie';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport './Upload.css';\r\n\r\nfunction VidDropZone({ video, setVideo, thumbnail, setThumbnail, duration, setDuration }) {\r\n\r\n    const handleDrop = (files) => {\r\n        let formData = new FormData();\r\n\r\n        const config = {\r\n            header: { 'content-type': 'multipart/form-data' }\r\n        }\r\n        console.log(files);\r\n        formData.append('file', files[0]);\r\n\r\n        axios.post('/api/post/uploadVideo', formData, config)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setVideo(response.data.videoFilePath);\r\n\r\n                    let variable = {\r\n                        filePath: response.data.videoFilePath\r\n                    }\r\n                    axios.post('/api/post/thumbnail', variable)\r\n                        .then(response => {\r\n                            if (response.data.success) {\r\n                                setThumbnail(response.data.thumbsFilePath);\r\n                                setDuration(response.data.thumbsFileDuration);\r\n                            } else {\r\n                                alert('Failed to upload video!');\r\n                            }\r\n                        })\r\n                } else {\r\n                    alert('Failed to upload!');\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Dropzone onDrop={handleDrop}\r\n                multiple={false}\r\n                maxSize={80000000000}\r\n            >\r\n                {({ getRootProps, getInputProps }) => (\r\n                    <div className=\"container\">\r\n                        <div\r\n                            {...getRootProps({\r\n                                className: 'dropzone',\r\n                                onDrop: event => event.stopPropagation()\r\n                            })}\r\n                        >\r\n                            <input name='file' {...getInputProps()} />\r\n                            <MovieIcon />\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Dropzone>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VidDropZone\r\n"]},"metadata":{},"sourceType":"module"}