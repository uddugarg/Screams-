{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Notification\\\\Notification.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Divider, MenuItem } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport './Notification.css';\n\nfunction Notification() {\n  const user = useSelector(state => state.user);\n  const [notifications, setNotifications] = useState([]);\n  const variable = {\n    writer: user.userData && user.userData._id\n  };\n  useEffect(() => {\n    axios.post('/api/notify/getNotifications', variable).then(response => {\n      if (response.data.success) {\n        setNotifications(response.data.notifications);\n      } else {\n        alert('Cannot get notifications!');\n      }\n    });\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, \"Notifications\"), notifications.map((item, index) => /*#__PURE__*/React.createElement(Link, {\n    to: `/scream/${item.postId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, item.writer._id !== item.postWriter && /*#__PURE__*/React.createElement(MenuItem, {\n    className: \"notify__item\",\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 25\n    }\n  }, !item.comment && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notify__username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 33\n    }\n  }, item.writer.firstName + ' ' + item.writer.lastName), \" Liked your post\"), item.comment && !item.reply && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notify__username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 33\n    }\n  }, item.writer.firstName + ' ' + item.writer.lastName), \" Commented on your post\"), item.reply && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"notify__username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 33\n    }\n  }, item.writer.firstName + ' ' + item.writer.lastName), \" Replied on your post\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 21\n    }\n  }))));\n}\n\nexport default Notification;","map":{"version":3,"sources":["D:/Web Development/Screams-/frontend/src/components/Notification/Notification.js"],"names":["React","useEffect","useState","axios","Divider","MenuItem","useSelector","Link","Notification","user","state","notifications","setNotifications","variable","writer","userData","_id","post","then","response","data","success","alert","map","item","index","postId","postWriter","comment","firstName","lastName","reply"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,mBAAlC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAO,oBAAP;;AAEA,SAASC,YAAT,GAAwB;AAEpB,QAAMC,IAAI,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEA,QAAM,CAACE,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,EAAD,CAAlD;AAEA,QAAMW,QAAQ,GAAG;AACbC,IAAAA,MAAM,EAAEL,IAAI,CAACM,QAAL,IAAiBN,IAAI,CAACM,QAAL,CAAcC;AAD1B,GAAjB;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,KAAK,CAACc,IAAN,CAAW,8BAAX,EAA2CJ,QAA3C,EACKK,IADL,CACUC,QAAQ,IAAI;AACd,UAAIA,QAAQ,CAACC,IAAT,CAAcC,OAAlB,EAA2B;AACvBT,QAAAA,gBAAgB,CAACO,QAAQ,CAACC,IAAT,CAAcT,aAAf,CAAhB;AACH,OAFD,MAEO;AACHW,QAAAA,KAAK,CAAC,2BAAD,CAAL;AACH;AACJ,KAPL;AAQH,GATQ,CAAT;AAWA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEKX,aAAa,CAACY,GAAd,CAAkB,CAACC,IAAD,EAAOC,KAAP,kBACf,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAG,WAAUD,IAAI,CAACE,MAAO,EAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKF,IAAI,CAACV,MAAL,CAAYE,GAAZ,KAAoBQ,IAAI,CAACG,UAAzB,iBACG,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,cAApB;AAAmC,IAAA,GAAG,EAAEF,KAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,CAACD,IAAI,CAACI,OAAN,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCJ,IAAI,CAACV,MAAL,CAAYe,SAAZ,GAAwB,GAAxB,GAA8BL,IAAI,CAACV,MAAL,CAAYgB,QAA9E,CADJ,qBAFJ,EAMCN,IAAI,CAACI,OAAL,IAAgB,CAACJ,IAAI,CAACO,KAAtB,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCP,IAAI,CAACV,MAAL,CAAYe,SAAZ,GAAwB,GAAxB,GAA8BL,IAAI,CAACV,MAAL,CAAYgB,QAA9E,CADJ,4BAPJ,EAWCN,IAAI,CAACO,KAAL,iBACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoCP,IAAI,CAACV,MAAL,CAAYe,SAAZ,GAAwB,GAAxB,GAA8BL,IAAI,CAACV,MAAL,CAAYgB,QAA9E,CADJ,0BAZJ,CAFR,eAoBI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApBJ,CADH,CAFL,CADJ;AA8BH;;AAED,eAAetB,YAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { Divider, MenuItem } from '@material-ui/core';\r\nimport { useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport './Notification.css';\r\n\r\nfunction Notification() {\r\n\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n\r\n    const variable = {\r\n        writer: user.userData && user.userData._id,\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.post('/api/notify/getNotifications', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setNotifications(response.data.notifications);\r\n                } else {\r\n                    alert('Cannot get notifications!');\r\n                }\r\n            })\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h3>Notifications</h3>\r\n            {notifications.map((item, index) => (\r\n                <Link to={`/scream/${item.postId}`}>\r\n                    {item.writer._id !== item.postWriter &&\r\n                        <MenuItem className='notify__item' key={index}>\r\n                        {!item.comment &&\r\n                            <p>\r\n                                <span className='notify__username'>{item.writer.firstName + ' ' + item.writer.lastName}</span> Liked your post\r\n                        </p>\r\n                        }\r\n                        {item.comment && !item.reply &&\r\n                            <p>\r\n                                <span className='notify__username'>{item.writer.firstName + ' ' + item.writer.lastName}</span> Commented on your post\r\n                        </p>\r\n                        }\r\n                        {item.reply &&\r\n                            <p>\r\n                                <span className='notify__username'>{item.writer.firstName + ' ' + item.writer.lastName}</span> Replied on your post\r\n                        </p>\r\n                        }\r\n                    </MenuItem>\r\n                    }\r\n                    <Divider />\r\n                </Link>\r\n    ))\r\n}\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Notification\r\n"]},"metadata":{},"sourceType":"module"}