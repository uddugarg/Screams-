{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\MERN\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Post\\\\Post.js\";\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport CommentsModal from './CommentsModal';\nimport Carousel from 'react-material-ui-carousel';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport AddCommentIcon from '@material-ui/icons/AddComment';\nimport PollIcon from '@material-ui/icons/Poll';\nimport SendIcon from '@material-ui/icons/Send';\nimport { makeStyles, Modal, Avatar, IconButton } from '@material-ui/core';\nimport './Post.css';\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    maxWidth: 500,\n    maxHeight: '90vh',\n    height: 'auto',\n    objectFit: 'contain',\n    width: '90%',\n    backgroundColor: '#f9c5d1',\n    backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\n    border: '4px solid rgb(176, 134, 200)',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n    overflowX: 'hidden'\n  }\n}));\n\nfunction Post(props) {\n  const user = useSelector(state => state.user);\n  const writer = user.userData && user.userData._id;\n  const [open, setOpen] = useState(false);\n  const [modalStyle] = React.useState(getModalStyle);\n  const classes = useStyles();\n  const [posts, setPosts] = useState([]);\n  const [userPosts, setUserPosts] = useState([]);\n  const [comments, setComments] = useState([]);\n  const [postID, setPostID] = useState('');\n  const [likes, setLikes] = useState('');\n  useEffect(() => {\n    let variable = {\n      writer: localStorage.getItem('userId')\n    };\n    axios.post('/api/post/getFollowedPosts', variable).then(response => {\n      if (response.data.success) {\n        setPosts(response.data.posts);\n      } else {\n        alert('Server Down! Please Visit Later!');\n      }\n    });\n    axios.post('/api/post/getUserPosts', variable).then(response => {\n      if (response.data.success) {\n        setUserPosts(response.data.usersPosts);\n      } else {\n        alert('Server Down! Please Visit Later!');\n      }\n    });\n  }, []);\n  let postId = '';\n\n  const handleOpen = id => {\n    setOpen(true);\n    postId = id;\n    setPostID(postId);\n    let variable = {\n      postId: postId\n    };\n    axios.post('/api/comment/getComment', variable).then(response => {\n      if (response.data.success) {\n        setComments(response.data.comments);\n      } else {\n        alert('Unable to fetch comment!');\n      }\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n    setComments('');\n  };\n\n  const updateComments = comment => {\n    setComments(comments.concat(comment));\n  };\n\n  let postIdForLike = '';\n\n  const handleLike = id => {\n    postIdForLike = id;\n    console.log(postIdForLike);\n    let variable = {\n      postId: postIdForLike,\n      writer: user.userData && user.userData._id\n    };\n    axios.put('/api/post/postLike', variable).then(response => {\n      if (response.data.success) {\n        setLikes(likes + 1);\n      } else {\n        alert('Cannot Like This Post!!');\n      }\n    });\n  };\n\n  const handleDislike = id => {\n    postIdForLike = id;\n    console.log(postIdForLike);\n    let variable = {\n      postId: postIdForLike,\n      writer: user.userData && user.userData._id\n    };\n    axios.put('/api/post/deleteLike', variable).then(response => {\n      if (response.data.success) {\n        setLikes(likes - 1);\n      } else {\n        alert('Cannot Like This Post!!');\n      }\n    });\n  };\n\n  let postIdForVisit = '';\n\n  const savePostId = id => {\n    postIdForVisit = id;\n    window.localStorage.setItem('postId', postIdForVisit);\n  };\n\n  const renderFollowedPosts = posts.map((post, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${localStorage.getItem('postId')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__profilePic\",\n    src: post.writer.image,\n    alt: post.writer.username,\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, post.writer.firstName + ' ' + post.writer.lastName), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }, \"\\xB7 @\", post.writer.username), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, \"\\xB7 \", moment(post.createdAt).format('MMM Do YY')), user.userData && user.userData._id === post.writer._id && /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: \"post__delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 25\n    }\n  }, post.caption))), post.images[0] && /*#__PURE__*/React.createElement(Carousel, {\n    autoplay: false,\n    className: \"post__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 21\n    }\n  }, post.images.map((image, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post__img\",\n    src: `http://localhost:5000/${image}`,\n    alt: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 33\n    }\n  })))), post.video && /*#__PURE__*/React.createElement(Link, {\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    className: \"post__img\",\n    controls: true,\n    src: `http://localhost:5000/${post.video}`,\n    alt: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, !post.likes.includes(writer) ? /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleLike(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderRoundedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleDislike(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, comments ? /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CommentsModal, {\n    refreshFunction: updateComments,\n    comments: comments,\n    postId: postID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 37\n    }\n  }, \"Loading.....\")), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleOpen(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddCommentIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PollIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }))))));\n  const renderUsersPosts = userPosts.map((post, index) => /*#__PURE__*/React.createElement(\"div\", {\n    key: index,\n    className: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: `/profile/${localStorage.getItem('postId')}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: \"post__profilePic\",\n    src: post.writer.image,\n    alt: post.writer.username,\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"h4\", {\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 21\n    }\n  }, post.writer.firstName + ' ' + post.writer.lastName), /*#__PURE__*/React.createElement(\"span\", {\n    onClick: () => {\n      savePostId(post.writer._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  }, \"\\xB7 @\", post.writer.username), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  }, \"\\xB7 \", moment(post.createdAt).format('MMM Do YY')), user.userData && user.userData._id === post.writer._id && /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: \"post__delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Link, {\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__caption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, post.caption))), post.images[0] && /*#__PURE__*/React.createElement(Carousel, {\n    autoplay: false,\n    className: \"post__image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, post.images.map((image, index) => /*#__PURE__*/React.createElement(Link, {\n    key: index,\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"post__img\",\n    src: `http://localhost:5000/${image}`,\n    alt: \"images\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 33\n    }\n  })))), post.video && /*#__PURE__*/React.createElement(Link, {\n    to: `/scream/${post._id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    className: \"post__img\",\n    controls: true,\n    src: `http://localhost:5000/${post.video}`,\n    alt: \"videos\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reaction\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, !post.likes.includes(writer) ? /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleLike(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteBorderRoundedIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleDislike(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(FavoriteIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 25\n    }\n  }, comments ? /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(CommentsModal, {\n    refreshFunction: updateComments,\n    comments: comments,\n    postId: postID,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }\n  })) : /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 37\n    }\n  }, \"Loading.....\")), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    onClick: () => {\n      handleOpen(post._id);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(AddCommentIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(PollIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"post__reactionBtns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 322,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"post__reactionBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(SendIcon, {\n    fontSize: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 29\n    }\n  }))))));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"posts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 9\n    }\n  }, renderFollowedPosts, renderUsersPosts);\n}\n\nexport default Post;","map":{"version":3,"sources":["D:/Web Development/MERN/Screams-/frontend/src/components/Post/Post.js"],"names":["React","useEffect","useState","moment","axios","Link","useSelector","CommentsModal","Carousel","DeleteIcon","FavoriteBorderRoundedIcon","FavoriteIcon","AddCommentIcon","PollIcon","SendIcon","makeStyles","Modal","Avatar","IconButton","getModalStyle","top","left","transform","useStyles","theme","paper","position","maxWidth","maxHeight","height","objectFit","width","backgroundColor","backgroundImage","border","boxShadow","shadows","padding","spacing","overflowX","Post","props","user","state","writer","userData","_id","open","setOpen","modalStyle","classes","posts","setPosts","userPosts","setUserPosts","comments","setComments","postID","setPostID","likes","setLikes","variable","localStorage","getItem","post","then","response","data","success","alert","usersPosts","postId","handleOpen","id","handleClose","updateComments","comment","concat","postIdForLike","handleLike","console","log","put","handleDislike","postIdForVisit","savePostId","window","setItem","renderFollowedPosts","map","index","image","username","firstName","lastName","createdAt","format","caption","images","video","includes","renderUsersPosts"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport moment from 'moment';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport CommentsModal from './CommentsModal';\r\nimport Carousel from 'react-material-ui-carousel';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FavoriteBorderRoundedIcon from '@material-ui/icons/FavoriteBorderRounded';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport AddCommentIcon from '@material-ui/icons/AddComment';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport { makeStyles, Modal, Avatar, IconButton } from '@material-ui/core';\r\nimport './Post.css';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n        top: `${top}%`,\r\n        left: `${left}%`,\r\n        transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        position: 'absolute',\r\n        maxWidth: 500,\r\n        maxHeight: '90vh',\r\n        height: 'auto',\r\n        objectFit: 'contain',\r\n        width: '90%',\r\n        backgroundColor: '#f9c5d1',\r\n        backgroundImage: 'linear-gradient(315deg, #f9c5d1 0%, #9795ef 74%)',\r\n        border: '4px solid rgb(176, 134, 200)',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        overflowX: 'hidden',\r\n    },\r\n}));\r\n\r\nfunction Post(props) {\r\n    const user = useSelector(state => state.user);\r\n    const writer = user.userData && user.userData._id;\r\n\r\n    const [open, setOpen] = useState(false)\r\n    const [modalStyle] = React.useState(getModalStyle)\r\n    const classes = useStyles();\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [userPosts, setUserPosts] = useState([]);\r\n    const [comments, setComments] = useState([]);\r\n    const [postID, setPostID] = useState('');\r\n    const [likes, setLikes] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        let variable = {\r\n            writer: localStorage.getItem('userId'),\r\n        }\r\n\r\n        axios.post('/api/post/getFollowedPosts', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setPosts(response.data.posts);\r\n                } else {\r\n                    alert('Server Down! Please Visit Later!')\r\n                }\r\n            })\r\n\r\n        axios.post('/api/post/getUserPosts', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setUserPosts(response.data.usersPosts);\r\n                } else {\r\n                    alert('Server Down! Please Visit Later!')\r\n                }\r\n            })\r\n    }, [])\r\n\r\n    let postId = '';\r\n\r\n    const handleOpen = (id) => {\r\n        setOpen(true);\r\n        postId = id;\r\n        setPostID(postId);\r\n\r\n        let variable = {\r\n            postId: postId\r\n        }\r\n\r\n        axios.post('/api/comment/getComment', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setComments(response.data.comments);\r\n                } else {\r\n                    alert('Unable to fetch comment!');\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setComments('');\r\n    }\r\n\r\n    const updateComments = (comment) => {\r\n        setComments(comments.concat(comment));\r\n    }\r\n\r\n\r\n\r\n    let postIdForLike = '';\r\n\r\n    const handleLike = (id) => {\r\n        postIdForLike = id;\r\n        console.log(postIdForLike);\r\n\r\n        let variable = {\r\n            postId: postIdForLike,\r\n            writer: user.userData && user.userData._id,\r\n        }\r\n\r\n        axios.put('/api/post/postLike', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setLikes(likes + 1);\r\n                } else {\r\n                    alert('Cannot Like This Post!!');\r\n                }\r\n            })\r\n    }\r\n\r\n    const handleDislike = (id) => {\r\n        postIdForLike = id;\r\n        console.log(postIdForLike);\r\n\r\n        let variable = {\r\n            postId: postIdForLike,\r\n            writer: user.userData && user.userData._id,\r\n        }\r\n\r\n        axios.put('/api/post/deleteLike', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    setLikes(likes - 1);\r\n                } else {\r\n                    alert('Cannot Like This Post!!');\r\n                }\r\n            })\r\n    }\r\n\r\n    let postIdForVisit = '';\r\n\r\n    const savePostId = (id) => {\r\n        postIdForVisit = id;\r\n        window.localStorage.setItem('postId', postIdForVisit);\r\n    }\r\n\r\n    const renderFollowedPosts =\r\n        posts.map((post, index) => (\r\n            <div key={index} className='post'>\r\n                <div className='post__header'>\r\n                    <Link to={`/profile/${localStorage.getItem('postId')}`}>\r\n                        <Avatar className='post__profilePic' src={post.writer.image} alt={post.writer.username} onClick={() => { savePostId(post.writer._id) }} />\r\n                    </Link>\r\n                    <h4 onClick={() => { savePostId(post.writer._id) }}>{post.writer.firstName + ' ' + post.writer.lastName}</h4>\r\n                    <span onClick={() => { savePostId(post.writer._id) }}>· @{post.writer.username}</span>\r\n                    <span>· {moment(post.createdAt).format('MMM Do YY')}</span>\r\n                    {user.userData && user.userData._id === post.writer._id &&\r\n                        <DeleteIcon className='post__delete' />\r\n                    }\r\n                </div>\r\n                <Link to={`/scream/${post._id}`}>\r\n                    <div className='post__caption'>\r\n                        <p>{post.caption}</p>\r\n                    </div>\r\n                </Link>\r\n\r\n                {post.images[0] &&\r\n                    <Carousel autoplay={false} className='post__image'>\r\n                        {post.images.map((image, index) => (\r\n                            <Link key={index} to={`/scream/${post._id}`}>\r\n                                <img className='post__img' src={`http://localhost:5000/${image}`} alt='images' />\r\n                            </Link>\r\n                        ))}\r\n                    </Carousel>\r\n                }\r\n\r\n                {post.video &&\r\n                    <Link to={`/scream/${post._id}`}>\r\n                        <video className='post__img' controls src={`http://localhost:5000/${post.video}`} alt='videos' />\r\n                    </Link>\r\n                }\r\n                <div className='post__reaction'>\r\n                    <div className='post__reactionBtns'>\r\n                        {!post.likes.includes(writer) ?\r\n                            (\r\n                                <IconButton className='post__reactionBtn' onClick={() => { handleLike(post._id) }}>\r\n                                    <FavoriteBorderRoundedIcon fontSize='small' />\r\n                                </IconButton>\r\n                            ) : (\r\n                                <IconButton className='post__reactionBtn' onClick={() => { handleDislike(post._id) }}>\r\n                                    <FavoriteIcon fontSize='small' />\r\n                                </IconButton>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <Modal open={open} onClose={handleClose}>\r\n                            {comments ? (\r\n                                <div style={modalStyle} className={classes.paper}>\r\n                                    <CommentsModal\r\n                                        refreshFunction={updateComments}\r\n                                        comments={comments}\r\n                                        postId={postID}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n                                        Loading.....\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </Modal>\r\n                        <IconButton className='post__reactionBtn' onClick={() => { handleOpen(post._id) }}>\r\n                            <AddCommentIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <IconButton className='post__reactionBtn' >\r\n                            <PollIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <IconButton className='post__reactionBtn' >\r\n                            <SendIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n    const renderUsersPosts =\r\n        userPosts.map((post, index) => (\r\n            <div key={index} className='post'>\r\n                <div className='post__header'>\r\n                    <Link to={`/profile/${localStorage.getItem('postId')}`}>\r\n                        <Avatar className='post__profilePic' src={post.writer.image} alt={post.writer.username} onClick={() => { savePostId(post.writer._id) }} />\r\n                    </Link>\r\n                    <h4 onClick={() => { savePostId(post.writer._id) }}>{post.writer.firstName + ' ' + post.writer.lastName}</h4>\r\n                    <span onClick={() => { savePostId(post.writer._id) }}>· @{post.writer.username}</span>\r\n                    <span>· {moment(post.createdAt).format('MMM Do YY')}</span>\r\n                    {user.userData && user.userData._id === post.writer._id &&\r\n                        <DeleteIcon className='post__delete' />\r\n                    }\r\n                </div>\r\n                <Link to={`/scream/${post._id}`}>\r\n                    <div className='post__caption'>\r\n                        <p>{post.caption}</p>\r\n                    </div>\r\n                </Link>\r\n\r\n                {post.images[0] &&\r\n                    <Carousel autoplay={false} className='post__image'>\r\n                        {post.images.map((image, index) => (\r\n                            <Link key={index} to={`/scream/${post._id}`}>\r\n                                <img className='post__img' src={`http://localhost:5000/${image}`} alt='images' />\r\n                            </Link>\r\n                        ))}\r\n                    </Carousel>\r\n                }\r\n\r\n                {post.video &&\r\n                    <Link to={`/scream/${post._id}`}>\r\n                        <video className='post__img' controls src={`http://localhost:5000/${post.video}`} alt='videos' />\r\n                    </Link>\r\n                }\r\n                <div className='post__reaction'>\r\n                    <div className='post__reactionBtns'>\r\n                        {!post.likes.includes(writer) ?\r\n                            (\r\n                                <IconButton className='post__reactionBtn' onClick={() => { handleLike(post._id) }}>\r\n                                    <FavoriteBorderRoundedIcon fontSize='small' />\r\n                                </IconButton>\r\n                            ) : (\r\n                                <IconButton className='post__reactionBtn' onClick={() => { handleDislike(post._id) }}>\r\n                                    <FavoriteIcon fontSize='small' />\r\n                                </IconButton>\r\n                            )\r\n                        }\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <Modal open={open} onClose={handleClose}>\r\n                            {comments ? (\r\n                                <div style={modalStyle} className={classes.paper}>\r\n                                    <CommentsModal\r\n                                        refreshFunction={updateComments}\r\n                                        comments={comments}\r\n                                        postId={postID}\r\n                                    />\r\n                                </div>\r\n                            ) : (\r\n                                    <div style={modalStyle} className={classes.paper}>\r\n                                        Loading.....\r\n                                    </div>\r\n                                )\r\n                            }\r\n                        </Modal>\r\n                        <IconButton className='post__reactionBtn' onClick={() => { handleOpen(post._id) }}>\r\n                            <AddCommentIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <IconButton className='post__reactionBtn' >\r\n                            <PollIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div className='post__reactionBtns'>\r\n                        <IconButton className='post__reactionBtn' >\r\n                            <SendIcon fontSize='small' />\r\n                        </IconButton>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        ))\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className='posts'>\r\n            {renderFollowedPosts}\r\n            {renderUsersPosts}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post\r\n"]},"metadata":{},"sourceType":"module"}