{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web Development\\\\Screams-\\\\frontend\\\\src\\\\components\\\\Upload\\\\Upload.js\";\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport axios from 'axios';\nimport { TextField, IconButton, Button } from '@material-ui/core';\nimport GifIcon from '@material-ui/icons/Gif';\nimport EventIcon from '@material-ui/icons/Event';\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\nimport './Upload.css';\nimport ImgDropZone from './ImgDropZone';\nimport VidDropZone from './VidDropZone';\n\nfunction Upload(props) {\n  const user = useSelector(state => state.user);\n  const [caption, setCaption] = useState('');\n  const [image, setImage] = useState([]);\n  const [video, setVideo] = useState('');\n  const [thumbnail, setThumbnail] = useState('');\n  const [duration, setDuration] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const variable = {\n      writer: user.userData._id,\n      caption: caption,\n      images: image,\n      video: video,\n      thumbnail: thumbnail,\n      duration: duration\n    };\n\n    if (caption === '') {\n      return alert('Fields are empty!!');\n    }\n\n    axios.post('/api/post/uploadPost', variable).then(response => {\n      if (response.data.success) {\n        alert('Posted Successfully');\n        setImage('');\n        setCaption('');\n        setThumbnail('');\n        window.location.reload();\n      } else {\n        alert('Failed to upload post!');\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    className: \"upload__caption\",\n    variant: \"filled\",\n    label: \"Write A Caption\",\n    type: \"text\",\n    value: caption,\n    onChange: e => setCaption(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload__btn\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ImgDropZone, {\n    image: image,\n    setImage: setImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload__btn\",\n    \"aria-label\": \"upload picture\",\n    component: \"span\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(VidDropZone, {\n    thumbnail: thumbnail,\n    setThumbnail: setThumbnail,\n    video: video,\n    setVideo: setVideo,\n    duration: duration,\n    setDuration: setDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(GifIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(EventIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(IconButton, {\n    className: \"upload__btn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AddLocationOutlinedIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: \"upload__btnSubmit\",\n    variant: \"outlined\",\n    type: \"submit\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, \"Scream\")), image !== [] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__thumbnailContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  }, image && image.map((img, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://localhost:5000/${img}`,\n    alt: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 29\n    }\n  })))), thumbnail !== '' && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__thumbnailContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"upload__thumbnail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: `http://localhost:5000/${thumbnail}`,\n    alt: \"thumbs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }))));\n}\n\nexport default Upload;","map":{"version":3,"sources":["D:/Web Development/Screams-/frontend/src/components/Upload/Upload.js"],"names":["React","useState","useSelector","axios","TextField","IconButton","Button","GifIcon","EventIcon","AddLocationOutlinedIcon","ImgDropZone","VidDropZone","Upload","props","user","state","caption","setCaption","image","setImage","video","setVideo","thumbnail","setThumbnail","duration","setDuration","handleSubmit","e","preventDefault","variable","writer","userData","_id","images","alert","post","then","response","data","success","window","location","reload","target","value","map","img","index"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { TextField, IconButton, Button } from '@material-ui/core'\r\nimport GifIcon from '@material-ui/icons/Gif';\r\nimport EventIcon from '@material-ui/icons/Event';\r\nimport AddLocationOutlinedIcon from '@material-ui/icons/AddLocationOutlined';\r\nimport './Upload.css';\r\nimport ImgDropZone from './ImgDropZone';\r\nimport VidDropZone from './VidDropZone';\r\n\r\nfunction Upload(props) {\r\n\r\n    const user = useSelector(state => state.user);\r\n\r\n    const [caption, setCaption] = useState('');\r\n    const [image, setImage] = useState([]);\r\n    const [video, setVideo] = useState('');\r\n    const [thumbnail, setThumbnail] = useState('');\r\n    const [duration, setDuration] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const variable = {\r\n            writer: user.userData._id,\r\n            caption: caption,\r\n            images: image,\r\n            video: video,\r\n            thumbnail: thumbnail,\r\n            duration: duration,\r\n        }\r\n\r\n        if (caption === '') {\r\n            return alert('Fields are empty!!');\r\n        }\r\n\r\n        axios.post('/api/post/uploadPost', variable)\r\n            .then(response => {\r\n                if (response.data.success) {\r\n                    alert('Posted Successfully');\r\n                    setImage('');\r\n                    setCaption('');\r\n                    setThumbnail('');\r\n                    window.location.reload();\r\n                } else {\r\n                    alert('Failed to upload post!');\r\n                }\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div className='upload'>\r\n            <TextField className='upload__caption' variant='filled' label='Write A Caption' type='text' value={caption} onChange={(e) => setCaption(e.target.value)} />\r\n            <div className='upload__btns'>\r\n                <IconButton className='upload__btn' aria-label=\"upload picture\" component=\"span\">\r\n                    <ImgDropZone image={image}\r\n                        setImage={setImage}\r\n                    />\r\n                </IconButton>\r\n                <IconButton className='upload__btn' aria-label=\"upload picture\" component=\"span\">\r\n                    <VidDropZone\r\n                        thumbnail={thumbnail}\r\n                        setThumbnail={setThumbnail}\r\n                        video={video}\r\n                        setVideo={setVideo}\r\n                        duration={duration}\r\n                        setDuration={setDuration}\r\n                    />\r\n                </IconButton>\r\n                <IconButton className='upload__btn'>\r\n                    <GifIcon />\r\n                </IconButton>\r\n                <IconButton className='upload__btn'>\r\n                    <EventIcon />\r\n                </IconButton>\r\n                <IconButton className='upload__btn'>\r\n                    <AddLocationOutlinedIcon />\r\n                </IconButton>\r\n\r\n                <Button className='upload__btnSubmit' variant='outlined' type='submit' onClick={handleSubmit}>Scream</Button>\r\n            </div>\r\n\r\n            {image !== [] &&\r\n                <div className='upload__thumbnailContainer'>\r\n                    {image && image.map((img, index) => (\r\n                        <div className='upload__thumbnail'>\r\n                            <img src={`http://localhost:5000/${img}`} alt={index} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            }\r\n\r\n            {thumbnail !== '' &&\r\n                <div className='upload__thumbnailContainer'>\r\n                    <div className='upload__thumbnail'>\r\n                        <img src={`http://localhost:5000/${thumbnail}`} alt='thumbs' />\r\n                    </div>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upload\r\n"]},"metadata":{},"sourceType":"module"}